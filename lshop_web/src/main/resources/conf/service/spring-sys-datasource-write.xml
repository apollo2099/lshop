<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	    <!-- gvlogic Begin --> 
	<bean id="lvlogicWritedataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="true"
		depends-on="propertyConfigurer">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.lvlogic.writerurl}" />
		<property name="user" value="${jdbc.lvlogic.writerusername}" />
		<property name="password" value="${jdbc.lvlogic.writerpassword}" />
		<property name="autoCommitOnClose" value="true"></property>
		<property name="maxPoolSize" value="${jdbc.lvlogic.writer.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.lvlogic.writer.minPoolSize}" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="100" />
		<property name="acquireIncrement" value="10" />
		<property name="idleConnectionTestPeriod" value="600" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="lvlogicWriteSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="lvlogicWritedataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/lshop/common/pojo/logic/*.hbm.xml</value>
				<value>classpath:com/lshop/web/weixin/common/pojo/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.current_session_context_class">thread</prop><!-- getCurrentSession()获得session -->
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.default_entity_mode">pojo</prop>
				<prop key="hibernate.query.substitutions">true=1,false=0</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- Spring 的事务设置 -->
	<bean id="lvlogicWriteTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		depends-on="lvlogicWriteSessionFactory">
		<property name="sessionFactory" ref="lvlogicWriteSessionFactory" />
	</bean>
	 <!-- lvlogic End -->
	 
	 <!-- gvuser Begin --> 
	<bean id="lvuserWritedataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="true"
		depends-on="propertyConfigurer">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.lvuser.writerurl}" />
		<property name="user" value="${jdbc.lvuser.writerusername}" />
		<property name="password" value="${jdbc.lvuser.writerpassword}" />
		<property name="autoCommitOnClose" value="true"></property>
		<property name="maxPoolSize" value="${jdbc.lvuser.writer.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.lvuser.writer.minPoolSize}" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="100" />
		<property name="acquireIncrement" value="10" />
		<property name="idleConnectionTestPeriod" value="600" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="lvuserWriteSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="lvuserWritedataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/lshop/common/pojo/user/*.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.current_session_context_class">thread</prop><!-- getCurrentSession()获得session -->
				<prop key="hibernate.generate_statistics">
					${hibernate.generate_statistics}
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache}
				</prop>
				<prop key="hibernate.default_entity_mode">pojo</prop>
				<prop key="hibernate.query.substitutions">
					true=1,false=0
				</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- Spring 的事务设置 -->
	<bean id="lvuserWriteTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		depends-on="lvuserWriteSessionFactory">
		<property name="sessionFactory" ref="lvuserWriteSessionFactory" />
	</bean>
	 <!-- lvuser End -->
	 
	 <bean id="transactionInterceptor"
	 	class="com.lshop.common.spring.DynamicTransactionIntercepter"
	 	depends-on="lvuserWriteTransactionManager,lvlogicWriteTransactionManager,txAttributes">
	 	<!--   事务拦截器bean需要依赖注入一个事务管理器 -->
		<property name="transactionManager">
			<ref bean="lvlogicWriteTransactionManager" />
		</property>
		<property name="userTransactionManager">
			<ref bean="lvuserWriteTransactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<ref bean="txAttributes" />
		</property>
		<property name="userTansaction">
		<list>
			<value>com.lshop.web.accountAddress.service.AccountAddressService</value>
			<value>com.lshop.web.userCenter.service.UserCenterService</value>
		</list>
		</property>
	 </bean>
	   
</beans>
